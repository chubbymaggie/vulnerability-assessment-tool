{{- if .Values.defaultBackend.enabled }}
apiVersion: apps/v1
kind: Deployment

metadata:
  name: {{ template "nginx-ingress.defaultBackend.deploymentName" . }}
  namespace: {{ .Values.global.coreNamespace }}
  labels:
    {{- include "nginx-ingress.defaultBackend.enrichedLabels" . | nindent 4 }}

spec:
  replicas: {{ .Values.defaultBackend.replicas }}

  selector:
    matchLabels:
      app.kubernetes.io/instance: {{ template "nginx-ingress.defaultBackend.podName" . }}
      {{- include "nginx-ingress.defaultBackend.enrichedLabels" .  | nindent 6 }}

  template:
    metadata:
      labels:
        app.kubernetes.io/instance: {{ template "nginx-ingress.defaultBackend.podName" . }}
        {{- include "nginx-ingress.defaultBackend.enrichedLabels" . | nindent 8 }}
      annotations:
        checksum/defaultbackend-config: {{ include (print $.Template.BasePath "/default-backend/mountedConfigMap.yaml") . | sha256sum }}

    spec:
      automountServiceAccountToken: false
      containers:
        - name: {{ template "nginx-ingress.defaultBackend.name" . }}-container
          image: {{ template "containerName" .Values.defaultBackend.image }}
          imagePullPolicy: {{ .Values.defaultBackend.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080

          {{- if and .Values.defaultBackend.livenessProbe .Values.defaultBackend.livenessProbe.enabled }}
          {{- with .Values.defaultBackend.livenessProbe }}
          livenessProbe:
            initialDelaySeconds: {{ .initialDelaySeconds }}
            timeoutSeconds: {{ .timeoutSeconds }}
            failureThreshold: {{ .failureThreshold }}
            tcpSocket:
              port: http
          {{- end }}
          {{- end }}
          {{- if and .Values.defaultBackend.readinessProbe .Values.defaultBackend.readinessProbe.enabled }}
          {{- with .Values.defaultBackend.readinessProbe }}
          readinessProbe:
            initialDelaySeconds: {{ .initialDelaySeconds }}
            timeoutSeconds: {{ .timeoutSeconds }}
            failureThreshold: {{ .failureThreshold }}
            httpGet:
              path: /healthz
              port: http
              scheme: HTTP
            {{- end }}
            {{- end }}

          volumeMounts:
            - name: {{ template "nginx-ingress.defaultBackend.mountedConfigMapName" . }}
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
            - name: {{ template "nginx-ingress.defaultBackend.mountedConfigMapName" . }}
              mountPath: /usr/share/nginx/html/alerts/browser.json
              subPath: browser.json
          resources:
            {{- toYaml .Values.defaultBackend.image.resources | nindent 12 }}

      volumes:
        - name: {{ template "nginx-ingress.defaultBackend.mountedConfigMapName" . }}
          configMap:
            name: {{ template "nginx-ingress.defaultBackend.mountedConfigMapName" . }}
      {{- if .Values.defaultBackend.selfAntiAffinity }}
      affinity:
        podAntiAffinity:
          {{- if .Values.defaultBackend.selfAntiAffinity.soft }}
          preferredDuringSchedulingIgnoredDuringExecution:
          {{- else }}
          requiredDuringSchedulingIgnoredDuringExecution:
          {{- end }}
          - weight: {{ .Values.defaultBackend.selfAntiAffinity.weight }}
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/instance
                  operator: In
                  values: [{{ template "nginx-ingress.defaultBackend.podName" . }}]
              topologyKey: "kubernetes.io/hostname"
      {{- end -}}
{{- end -}}
