apiVersion: apps/v1
kind: StatefulSet

metadata:
  name: {{ template "statefulSetName" . }}
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "commonLabels" . | nindent 4 }}

spec:
  serviceName: {{ template "headlessServiceName" . }}
  replicas: {{ .Values.replicas }}

  podManagementPolicy: Parallel

  selector:
    matchLabels:
      {{- include "restlibutils.enrichedLabels" . | nindent 6 }}

  template:
    metadata:
      labels:
        {{- include "restlibutils.enrichedLabels" . | nindent 8 }}
      annotations:
        checksum/restlibutils-config: {{ include (print $.Template.BasePath "/configMap.yaml") . | sha256sum }}

    spec:
      {{- if .Values.global.podPriorityClass.enabled }}
      priorityClassName: {{ template "priorityClassName" . }}
      {{- end }}
      automountServiceAccountToken: false
      {{- if .Values.persistentVolume }}
      initContainers:
        - name: {{ template "name" . }}-permission-init-container
          image: alpine:3.10.2
          command:
            - sh
            - -c
            - |
              #!/bin/sh
              set -e
              chown -R {{ .Values.image.securityContext.runAsUser }}:{{ .Values.image.securityContext.runAsGroup }} {{ .Values.persistentVolume.mountPath }}
          securityContext:
            runAsUser: 0
          volumeMounts:
          - name: {{ template "pvcName" . }}
            mountPath: {{ .Values.persistentVolume.mountPath }}
          resources:
            limits:
              cpu: "50m"
              memory: "100Mi"
      {{- end }}
      containers:
        - name: {{ template "name" . }}-container
          image: {{ template "containerName" .Values.image }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: utils
              containerPort: 8092

          envFrom:
            - configMapRef:
                name: {{ template "configMapName" . }}
          {{- $global := .Values.global }}
          {{- if and .Values.livenessProbe .Values.livenessProbe.enabled }}
          {{- with .Values.livenessProbe }}
          livenessProbe:
            initialDelaySeconds: {{ .initialDelaySeconds }}
            periodSeconds: {{ .periodSeconds }}
            timeoutSeconds: {{ .timeoutSeconds }}
            failureThreshold: {{ .failureThreshold }}
            tcpSocket:
              port: utils
          {{- end }}
          {{- end }}
          {{- if and .Values.readinessProbe .Values.readinessProbe.enabled }}
          {{- with .Values.readinessProbe }}
          readinessProbe:
            initialDelaySeconds: {{ .initialDelaySeconds }}
            periodSeconds: {{ .periodSeconds }}
            timeoutSeconds: {{ .timeoutSeconds }}
            failureThreshold: {{ .failureThreshold }}
            httpGet:
              path: /cia/health
              port: utils
          {{- end }}
          {{- end }}
          {{- if .Values.persistentVolume }}
          volumeMounts:
          - name: {{ template "pvcName" . }}
            mountPath: {{ .Values.persistentVolume.mountPath }}
          {{- end }}
          {{ if .Values.image.resources -}}
          resources:
            {{- toYaml .Values.image.resources | nindent 12 }}
          {{- end }}
          {{ if .Values.image.securityContext -}}
          securityContext:
            {{- toYaml .Values.image.securityContext | nindent 12 }}
          {{- end }}
      {{- if .Values.persistentVolume }}
      volumes:
        - name: {{ template "pvcName" . }}
          persistentVolumeClaim:
            claimName: {{ template "pvcName" . }}
      {{- end }}
      {{- if .Values.selfAntiAffinity }}
      affinity:
        podAntiAffinity:
          {{- if and .Values.selfAntiAffinity .Values.selfAntiAffinity.soft }}
          preferredDuringSchedulingIgnoredDuringExecution:
          {{- else }}
          requiredDuringSchedulingIgnoredDuringExecution:
          {{- end }}
          {{- if .Values.selfAntiAffinity.weight }}
            {{- if ge (int .Values.selfAntiAffinity.weight) 1 }}
            - weight: {{ .Values.selfAntiAffinity.weight }}
            {{- else }}
            # ERROR: .Values.selfAntiAffinity.weight < 1
            #        replaced with default value 100
            - weight: 100
            {{- end }}
          {{- else }}
            # ERROR: .Values.selfAntiAffinity.weight undefined
            #        replaced with default value 100
            - weight: 100
          {{- end }}
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values: [{{ template "name" . }}]
                  - key: app.kubernetes.io/instance
                    operator: In
                    values: [{{ template "podName" . }}]
                topologyKey: "kubernetes.io/hostname"
      {{- end }}
  {{- if .Values.persistentVolume }}
  {{- if not .Values.persistentVolume.nfs }}
  volumeClaimTemplates:
  - metadata:
      name: {{ template "pvcName" . }}
      labels:
        {{- include "commonLabels" . | nindent 8 }}

    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: {{ .Values.persistentVolume.storage }}
  {{- end -}}
  {{- end -}}
