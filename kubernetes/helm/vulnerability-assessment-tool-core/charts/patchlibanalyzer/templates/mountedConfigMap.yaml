apiVersion: v1
kind: ConfigMap

metadata:
  name: {{ template "mountedConfigMapName" . }}
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "commonLabels" . | nindent 4 }}

data:
  postgres-checker.sh: |-
    #!/bin/sh
    CHART_NAME="{{ template "name" . }}"
    LOG_ORIGIN="postgres-checker.sh"
    {{- include "logFunctions" . | nindent 4 }}

    {{- $release := .Release.Name }}
    until pg_isready -q -h {{ $release }}-db-master -p 5432; do
      _info "Postgres-master not ready, sleeping for {{ .Values.backoffDuration }}"
      sleep {{ .Values.backoffDuration }}
    done
    _info "Postgres master is ready"

    until pg_isready -q -h {{ $release }}-db-pool -p 5432; do
      _info "Pgpool entrypoint not ready, sleeping for {{ .Values.backoffDuration }}"
      sleep {{ .Values.backoffDuration }}
    done
    _info "Pgpool is ready"
    exit 0

  restbackend-checker.sh: |-
    #!/bin/sh
    CHART_NAME="{{ template "name" . }}"
    LOG_ORIGIN="restbackend-checker.sh"
    {{- include "logFunctions" . | nindent 4 }}

    until curl -q -X GET {{ $release }}-restbackend:8091/backend/health | grep -q "UP"; do
      _info "Restbackend not ready, sleeping for {{ .Values.backoffDuration }}"
      sleep {{ .Values.backoffDuration }}
    done
    _info "Restbackend is ready"
    exit 0

  liveness-probe.sh: |-
    #!/bin/bash
    if pgrep "java" > /dev/null; then
      exit 0
    else
      exit 127
    fi

  entrypoint.sh: |-
    #!/bin/sh

    java \
    	-Dhttp.nonProxyHosts=$NON_PROXY_HOSTS \
    	-Dhttp.proxyHost=$HTTP_PROXY_HOST \
    	-Dhttp.proxyPort=$HTTP_PROXY_PORT \
    	-Dhttps.proxyHost=$HTTPS_PROXY_HOST \
    	-Dhttps.proxyPort=$HTTPS_PROXY_PORT \
      -Dspring.profiles.active=docker \
    	-jar /vulas/patch-lib-analyzer.jar $PATCHEVAL_OPTS
