{{- if .Values.deployment.enabled -}}
# INFO: deployment enabled because .Values.deployment.enabled=true
apiVersion: apps/v1
kind: Deployment

metadata:
  name: {{ template "deploymentName" . }}
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "commonLabels" . | nindent 4 }}

spec:
  replicas: {{ .Values.replicas }}

  selector:
    matchLabels:
      app.kubernetes.io/instance: {{ template "podName" . }}
      {{- include "commonLabels" . | nindent 6 }}

  template:
    metadata:
      name: {{ template "podName" . }}
      labels:
        app.kubernetes.io/instance: {{ template "podName" . }}
        {{- include "commonLabels" . | nindent 8 }}

      annotations:
        checksum/patchlibanalyzer-env-config: {{ include (print .Template.BasePath "/envConfigMap.yaml") . | sha256sum | trunc 63 }}
        checksum/patchlibanalyzer-mounted-config: {{ include (print .Template.BasePath "/mountedConfigMap.yaml") . | sha256sum | trunc 63 }}
        checksum/patchlibanalyzer-secret: {{ include (print .Template.BasePath "/secret.yaml") . | sha256sum | trunc 63 }}

    spec:
      {{- if .Values.global.podPriorityClass.enabled }}
      priorityClassName: {{ template "priorityClassName" . }}
      {{- end }}
      initContainers:
        - name: {{ template "name" . }}-postgres-checker-container
          image: {{ template "containerName" .Values.image.initContainer }}
          imagePullPolicy: {{ .Values.image.initContainer.pullPolicy }}
          command:
          - sh
          - -c
          - . /vulas/postgres-checker.sh

          volumeMounts:
          - name: {{ template "mountedConfigMapName" . }}
            mountPath: /vulas/postgres-checker.sh
            subPath: postgres-checker.sh

          envFrom:
            - configMapRef:
                name: {{ template "envConfigMapName" . }}
            - secretRef:
                name: {{ template "secretName" . }}

          {{- if .Values.image.initContainer.resources }}
          resources:
            {{- toYaml .Values.image.initContainer.resources | nindent 12 }}
          {{- end }}
          {{- if .Values.image.initContainer.securityContext }}
          securityContext:
            {{- toYaml .Values.image.initContainer.securityContext | nindent 12 }}
          {{- end }}

        - name: {{ template "name" . }}-restbackend-checker-container
          image: everpeace/curl-jq:latest
          imagePullPolicy: "IfNotPresent"
          command:
          - sh
          - -c
          - . /vulas/restbackend-checker.sh

          volumeMounts:
          - name: {{ template "mountedConfigMapName" . }}
            mountPath: /vulas/restbackend-checker.sh
            subPath: restbackend-checker.sh

          {{- if .Values.image.initContainer.resources }}
          resources:
            {{- toYaml .Values.image.initContainer.resources | nindent 12 }}
          {{- end }}
          {{- if .Values.image.initContainer.securityContext }}
          securityContext:
            {{- toYaml .Values.image.initContainer.securityContext | nindent 12 }}
          {{- end }}
      containers:
        - name: {{ template "name" . }}-container
          image: {{ template "containerName" .Values.image.mainContainer }}
          imagePullPolicy: {{ .Values.image.mainContainer.pullPolicy }}

          envFrom:
            - configMapRef:
                name: {{ template "envConfigMapName" . }}
            - secretRef:
                name: {{ template "secretName" . }}
          ports:
            - name: cia
              containerPort: 8080

          volumeMounts:
          {{- if .Values.persistentVolume }}
          - name: {{ template "pvcName" . }}
            mountPath: {{ .Values.persistentVolume.mountPath }}
          {{- end }}
          - name: {{ template "mountedConfigMapName" . }}
            mountPath: /vulas/liveness-probe.sh
            subPath: liveness-probe.sh

          {{- if and .Values.livenessProbe .Values.livenessProbe.enabled }}
          {{- with .Values.livenessProbe }}
          livenessProbe:
            initialDelaySeconds: {{ .initialDelaySeconds }}
            periodSeconds: {{ .periodSeconds }}
            timeoutSeconds: {{ .timeoutSeconds }}
            failureThreshold: {{ .failureThreshold }}
            exec:
              command:
                - sh
                - -c
                - . /vulas/liveness-probe.sh
          {{- end }}
          {{- end }}
          {{- if .Values.image.mainContainer.securityContext }}
          securityContext:
            {{- toYaml .Values.image.mainContainer.securityContext | nindent 12 }}
          {{- end }}
          {{- if .Values.image.mainContainer.resources }}
          resources:
            {{- toYaml .Values.image.mainContainer.resources | nindent 12 }}
          {{- end }}
      volumes:
        {{- if .Values.persistentVolume }}
        - name: {{ template "pvcName" . }}
          persistentVolumeClaim:
            claimName: {{ template "pvcName" . }}
        {{- end }}
        - name: {{ template "mountedConfigMapName" . }}
          configMap:
            name: {{ template "mountedConfigMapName" . }}
            defaultMode: 0744

      {{- if .Values.selfAntiAffinity }}
      affinity:
        podAntiAffinity:
          {{- if .Values.selfAntiAffinity.soft }}
          preferredDuringSchedulingIgnoredDuringExecution:
          {{- else }}
          requiredDuringSchedulingIgnoredDuringExecution
          {{- end }}
          {{- if .Values.selfAntiAffinity.weight }}
            {{- if ge (int .Values.selfAntiAffinity.weight) 1 }}
            - weight: {{ .Values.selfAntiAffinity.weight }}
            {{- else }}
            # ERROR: .Values.selfAntiAffinity.weight < 1
            #        replaced with default value 100
            - weight: 100
            {{- end }}
          {{- else }}
            # ERROR: .Values.selfAntiAffinity.weight undefined
            #        replaced with default value 100
            - weight: 100
          {{- end }}
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values: [{{ template "name" . }}]
                  - key: app.kubernetes.io/instance
                    operator: In
                    values: [{{ template "podName" . }}]
                topologyKey: "kubernetes.io/hostname"
    {{- end }}
{{- else }}
# INFO: deployment disabled because .Values.deployment.enabled=false
{{- end -}}
