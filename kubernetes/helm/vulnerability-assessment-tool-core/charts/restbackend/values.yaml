replicas: 2
licenseConfidenceThreshold: 0.2
langConfidenceThreshold: 0.2
backoffDuration: 5

# Sets logging level for shell scripts, root logging level for springboot
debug: true

rbac:
  # Creates service account required to check if the postgres
  # replicas are ready by querying the Kubernetes API
  create: true

podPriorityClass:
  # If .Values.global.podPriorityClass.enabled and spec is {}
  # defaults to
  #   globalDefault: false
  #   value: 10000
  #   preemptionPolicy: PreemptLowerPriority
  spec: {}

horizontalPodAutoScaler:
  enabled: false
  # If set to {} and .Values.horizontalPodAutoScaler.enabled=true
  # defaults to
  #   metrics:
  #   - type: Resource
  #     resource:
  #       name: cpu
  #       targetAverageUtilization: 80
  # Else set to a map that respects scheme defined in
  # https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.10/#horizontalpodautoscalerlist-v1-autoscaling
  spec: {}

persistentVolume: {}
  # storage: "2Gi"
  # nfs:
  #   server: 10.180.0.10
  #   path: /share_1234cb44_31c6_4473_955f_860e3b61fb0e


podDisruptionBudget:
  #    Warning :  this won't be applied unless the replicas
  #               values are >= 2
  minAvailable: 1

livenessProbe:
  # High initial delay recommended due to startup time for postgres
  # statefulsets and replication to come to life
  # Worst case scenario time before container is killed by k8s :
  # initialDelaySeconds + ((periodSeconds + timeoutSeconds) * failureThreshold)
  # = 330s ~= 5.5min
  enabled: true
  initialDelaySeconds: 30
  periodSeconds: 15
  timeoutSeconds: 5
  failureThreshold: 15

readinessProbe:
  # Worst case scenario time before container is killed by k8s :
  # initialDelaySeconds + ((periodSeconds + timeoutSeconds) * failureThreshold)
  # = 130s ~= 2.2min
  enabled: true
  initialDelaySeconds: 30
  periodSeconds: 15
  timeoutSeconds: 5
  failureThreshold: 5

# Avoids provisioning containers on the same node
selfAntiAffinity:
  soft: true
  weight: 100

image:
  initContainer:
    pullPolicy: "Always"
    registry: {}
    registryPort: {}
    name: "postgres"
    # Alpine images for init container to reduce footprint:
    #     - size: 28MB
    tag: "11.3-alpine"

    securityContext: {}
      # runAsUser: 65534
      # runAsGroup: 65534
      # privileged: false
      # readOnlyRootFilesystem: true
      # capabilities:
      #   drop:
      #     - ALL
      #   add:
      #     - SYS_TIME
      #     - NET_ADMIN

    resources: {}
      # requests:
      #   memory: "25Mi"
      #   cpu: "100m"
      # limits:
      #   memory: "35Mi"
      #   cpu: "200m"

  mainContainer:
    pullPolicy: "IfNotPresent"
    registry: {}
    registryPort: {}
    name: "eclipse/steady-rest-backend"
    tag: "3.2.0-SNAPSHOT-jib"

    resources: {}
      # limits:
      #   memory: "16Gi"
      #   cpu: "8"
      # requests:
      #   memory: "8Gi"
      #   cpu: "4"

    securityContext: {}
      # runAsUser: 65534
      # runAsGroup: 65534
      # privileged: false
      # readOnlyRootFilesystem: false
