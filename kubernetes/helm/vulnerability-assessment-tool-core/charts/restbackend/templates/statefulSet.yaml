apiVersion: apps/v1
kind: StatefulSet

metadata:
  name: {{ template "statefulSetName" . }}
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "commonLabels" . | nindent 4 }}

spec:
  serviceName: {{ template "headlessServiceName" . }}
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      {{- include "restbackend.enrichedLabels" . | nindent 6 }}

  podManagementPolicy: OrderedReady

  template:
    metadata:
      labels:
        {{- include "restbackend.enrichedLabels" . | nindent 8 }}
      annotations:
        checksum/restbackend-env-config: {{ include (print $.Template.BasePath "/envConfigMap.yaml") . | sha256sum }}
        checksum/restbackend-mounted-config: {{ include (print $.Template.BasePath "/mountedConfigMap.yaml") . | sha256sum }}

    spec:
      {{- if .Values.global.podPriorityClass.enabled }}
      priorityClassName: {{ template "priorityClassName" . }}
      {{- end }}
      serviceAccountName: {{ template "restbackend.serviceAccountName" . }}
      initContainers:
        - name: {{ template "name" . }}-init-container
          image: {{ template "containerName" .Values.image.initContainer }}
          imagePullPolicy: {{ .Values.image.initContainer.pullPolicy }}
          command:
          - sh
          - -c
          - . /vulas/postgres-checker.sh

          volumeMounts:
          - name: {{ template "mountedConfigMapName" . }}
            mountPath: /vulas/postgres-checker.sh
            subPath: postgres-checker.sh
          envFrom:
            - secretRef:
                name: {{ template "secretName" . }}

          {{ if .Values.image.initContainer.securityContext -}}
          securityContext:
            {{- toYaml .Values.image.initContainer.securityContext | nindent 12 }}
          {{- end }}
          {{ if .Values.image.initContainer.resources -}}
          resources:
            {{- toYaml .Values.image.initContainer.resources | nindent 12 }}
          {{- end }}

        - name: {{ template "name" . }}-replica-checker-container
          image: everpeace/curl-jq:latest
          imagePullPolicy: "IfNotPresent"
          command:
          - sh
          - -c
          - . /vulas/replica-checker.sh

          volumeMounts:
          - name: {{ template "mountedConfigMapName" . }}
            mountPath: /vulas/replica-checker.sh
            subPath: replica-checker.sh
          {{ if .Values.image.initContainer.resources -}}
          resources:
            {{- toYaml .Values.image.initContainer.resources | nindent 12 }}
          {{- end }}
          {{ if .Values.image.initContainer.securityContext -}}
          securityContext:
            {{- toYaml .Values.image.initContainer.securityContext | nindent 12 }}
          {{- end }}

      containers:
        - name: {{ template "name" . }}-container
          image: {{ template "containerName" .Values.image.mainContainer }}
          imagePullPolicy: {{ .Values.image.mainContainer.pullPolicy }}
          ports:
            - name: backend
              containerPort: 8091

          envFrom:
            - secretRef:
                name: {{ template "secretName" . }}
            - configMapRef:
                name: {{ template "envConfigMapName" . }}
          {{- $global := .Values.global }}
          {{ if and .Values.livenessProbe .Values.livenessProbe.enabled }}
          {{- with .Values.livenessProbe }}
          livenessProbe:
            initialDelaySeconds: {{ .initialDelaySeconds }}
            periodSeconds: {{ .periodSeconds }}
            timeoutSeconds: {{ .timeoutSeconds }}
            failureThreshold: {{ .failureThreshold }}
            httpGet:
              path: /backend/health
              port: backend
          {{- end }}
          {{- end }}
          {{ if and .Values.readinessProbe .Values.readinessProbe.enabled }}
          {{- with .Values.readinessProbe }}
          readinessProbe:
            initialDelaySeconds: {{ .initialDelaySeconds }}
            periodSeconds: {{ .periodSeconds }}
            timeoutSeconds: {{ .timeoutSeconds }}
            failureThreshold: {{ .failureThreshold }}
            httpGet:
              path: /backend/health
              port: backend
          {{- end }}
          {{- end }}

          volumeMounts:
          {{- if .Values.persistentVolume }}
          {{- if .Values.persistentVolume.nfs }}
          - name: {{ template "pvcName" . }}
            mountPath: /flyway-callbacks
          {{- end }}
          {{- end }}
          - name: {{ template "mountedConfigMapName" . }}
            mountPath: /vulas/entrypoint.sh
            subPath: entrypoint.sh
          {{- if .Values.image.mainContainer.securityContext }}
          securityContext:
            {{- toYaml .Values.image.mainContainer.securityContext | nindent 12 }}
          {{- end }}
          {{- if .Values.image.mainContainer.resources }}
          resources:
            {{- toYaml .Values.image.mainContainer.resources | nindent 12 }}
          {{- end }}

      volumes:
        {{- if .Values.persistentVolume }}
        {{- if .Values.persistentVolume.nfs }}
        - name: {{ template "pvcName" . }}
          persistentVolumeClaim:
            claimName: {{ template "pvcName" . }}
        {{- end }}
        {{- end }}
        - name: {{ template "mountedConfigMapName" . }}
          configMap:
            name: {{ template "mountedConfigMapName" . }}
            defaultMode: 0744
      {{ if .Values.selfAntiAffinity }}
      affinity:
        podAntiAffinity:
          {{- if .Values.selfAntiAffinity.soft }}
          preferredDuringSchedulingIgnoredDuringExecution:
          {{- else }}
          requiredDuringSchedulingIgnoredDuringExecution:
          {{- end }}
          {{- if .Values.selfAntiAffinity.weight }}
            {{- if ge (int .Values.selfAntiAffinity.weight) 1 }}
            - weight: {{ .Values.selfAntiAffinity.weight }}
            {{- else }}
            # ERROR: .Values.selfAntiAffinity.weight < 1
            #        replaced with default value 100
            - weight: 100
            {{- end }}
          {{- else }}
            # ERROR: .Values.selfAntiAffinity.weight undefined
            #        replaced with default value 100
            - weight: 100
          {{- end }}
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values: [{{ template "name" . }}]
                  - key: app.kubernetes.io/instance
                    operator: In
                    values: [{{ template "podName" . }}]
                topologyKey: "kubernetes.io/hostname"
      {{- end }}
