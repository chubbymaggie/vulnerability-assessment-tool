{{- if .Values.kubeStateMetrics.enabled -}}
apiVersion: apps/v1
kind: Deployment

metadata:
  name: {{ template "prom.kube.deploymentName" . }}
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "prom.kube.enrichedLabels" . | nindent 4 }}

spec:
  replicas: {{ .Values.kubeStateMetrics.replicas }}

  selector:
    matchLabels:
      app.kubernetes.io/instance: {{ template "prom.kube.podName" . }}
      {{- include "prom.kube.enrichedLabels" . | nindent 6 }}

  template:
    metadata:
      labels:
        app.kubernetes.io/instance: {{ template "prom.kube.podName" . }}
        {{- include "prom.kube.enrichedLabels" . | nindent 8 }}
      annotations:
        prometheus.io/scrape: "true"

    spec:
      serviceAccountName: {{ template "prom.kube.serviceAccountName" . }}

      containers:
        - name: {{ template "prom.kube.name" . }}-container
          image: {{ template "containerName" .Values.kubeStateMetrics.image }}
          imagePullPolicy: "{{ .Values.kubeStateMetrics.image.pullPolicy }}"
          ports:
            - name: http
              containerPort: 8080

          {{- if .Values.kubeStateMetrics.image.livenessProbe.enabled }}
          {{- with .Values.kubeStateMetrics.image.livenessProbe }}
          livenessProbe:
            initialDelaySeconds: {{ .initialDelaySeconds }}
            periodSeconds: {{ .periodSeconds }}
            timeoutSeconds: {{ .timeoutSeconds }}
            failureThreshold: {{ .failureThreshold }}
            httpGet:
              path: /healthz
              port: http
          {{- end }}
          {{- end }}
          {{ if .Values.kubeStateMetrics.image.readinessProbe.enabled }}
          {{- with .Values.kubeStateMetrics.image.readinessProbe }}
          readinessProbe:
            periodSeconds: {{ .periodSeconds }}
            timeoutSeconds: {{ .timeoutSeconds }}
            failureThreshold: {{ .failureThreshold }}
            successThreshold: {{ .successThreshold }}
            httpGet:
              path: /healthz
              port: http
          {{- end }}
          {{- end }}
          {{- if .Values.kubeStateMetrics.image.resources }}
          resources:
            {{- toYaml .Values.kubeStateMetrics.image.resources | nindent 12 }}
          {{- end }}
          {{- if .Values.kubeStateMetrics.image.securityContext }}
          securityContext:
            {{- toYaml .Values.kubeStateMetrics.image.securityContext | nindent 12 }}
          {{- end }}

      {{- if .Values.kubeStateMetrics.selfAntiAffinity }}
      affinity:
        podAntiAffinity:
          {{- if .Values.kubeStateMetrics.selfAntiAffinity.soft }}
          preferredDuringSchedulingIgnoredDuringExecution:
          {{- else }}
          requiredDuringSchedulingIgnoredDuringExecution
          {{- end }}
          - weight: {{ .Values.kubeStateMetrics.selfAntiAffinity.weight }}
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values: [{{ template "prom.kube.name" . }}]
                - key: app.kubernetes.io/instance
                  operator: In
                  values: [{{ template "prom.kube.podName" . }}]
              topologyKey: "kubernetes.io/hostname"
      {{ end }}
{{- end -}}
